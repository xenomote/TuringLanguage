Grammar

    0 $accept: program $end

    1 program: groups blocks statement

    2 groups: GROUPS newlines
    3       | groups group newlines

    4 blocks: BLOCKS newlines
    5       | blocks block newlines

    6 group: IDENTIFIER "=" symbols

    7 block: IDENTIFIER ":" scope

    8 symbols: symbols "," symbol
    9        | symbol

   10 symbol: SYMBOL
   11       | MARKED SYMBOL

   12 scope: INDENT newlines statement optional_newlines UNINDENT

   13 optional_newlines: %empty
   14                  | newlines

   15 newlines: NEWLINE
   16         | newlines NEWLINE

   17 statement: write travel transition
   18          | IF condition scope newlines else
   19          | ACCEPT
   20          | REJECTION

   21 else: OR condition scope else
   22     | ELSE scope
   23     | statement

   24 write: %empty
   25      | MARK ","
   26      | UNMARK ","
   27      | WRITE string reversal repetition ","

   28 travel: GO direction repetition until

   29 transition: newlines statement
   30           | "," DO IDENTIFIER

   31 direction: LEFT
   32          | RIGHT

   33 string: string SYMBOL
   34       | SYMBOL

   35 reversal: %empty
   36         | BACKWARDS

   37 repetition: %empty
   38           | NUMBER TIMES

   39 until: %empty
   40      | UNTIL condition

   41 condition: symbol
   42          | MARKED
   43          | UNMARKED
   44          | condition OR symbol
   45          | condition OR IDENTIFIER
   46          | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
INDENT (258) 12
UNINDENT (259) 12
NEWLINE (260) 15 16
IF (261) 18
OR (262) 21 44 45
ELSE (263) 22
ACCEPT (264) 19
REJECTION (265) 20
WRITE (266) 27
GO (267) 28
DO (268) 30
MARK (269) 25
UNMARK (270) 26
MARKED (271) 11 42
UNMARKED (272) 43
LEFT (273) 31
RIGHT (274) 32
UNTIL (275) 40
TIMES (276) 38
BACKWARDS (277) 36
GROUPS (278) 2
BLOCKS (279) 4
IDENTIFIER (280) 6 7 30 45 46
SYMBOL (281) 10 11 33 34
NUMBER (282) 38
"=" (283) 6
"," (284) 8 25 26 27 30
":" (285) 7


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
groups (33)
    on left: 2 3, on right: 1 3
blocks (34)
    on left: 4 5, on right: 1 5
group (35)
    on left: 6, on right: 3
block (36)
    on left: 7, on right: 5
symbols (37)
    on left: 8 9, on right: 6 8
symbol (38)
    on left: 10 11, on right: 8 9 41 44
scope (39)
    on left: 12, on right: 7 18 21 22
optional_newlines (40)
    on left: 13 14, on right: 12
newlines (41)
    on left: 15 16, on right: 2 3 4 5 12 14 16 18 29
statement (42)
    on left: 17 18 19 20, on right: 1 12 23 29
else (43)
    on left: 21 22 23, on right: 18 21
write (44)
    on left: 24 25 26 27, on right: 17
travel (45)
    on left: 28, on right: 17
transition (46)
    on left: 29 30, on right: 17
direction (47)
    on left: 31 32, on right: 28
string (48)
    on left: 33 34, on right: 27 33
reversal (49)
    on left: 35 36, on right: 27
repetition (50)
    on left: 37 38, on right: 27 28
until (51)
    on left: 39 40, on right: 28
condition (52)
    on left: 41 42 43 44 45 46, on right: 18 21 40 44 45


State 0

    0 $accept: . program $end
    1 program: . groups blocks statement
    2 groups: . GROUPS newlines
    3       | . groups group newlines

    GROUPS  shift, and go to state 1

    program  go to state 2
    groups   go to state 3


State 1

    2 groups: GROUPS . newlines
   15 newlines: . NEWLINE
   16         | . newlines NEWLINE

    NEWLINE  shift, and go to state 4

    newlines  go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: groups . blocks statement
    3 groups: groups . group newlines
    4 blocks: . BLOCKS newlines
    5       | . blocks block newlines
    6 group: . IDENTIFIER "=" symbols

    BLOCKS      shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    blocks  go to state 9
    group   go to state 10


State 4

   15 newlines: NEWLINE .

    $default  reduce using rule 15 (newlines)


State 5

    2 groups: GROUPS newlines .  [BLOCKS, IDENTIFIER]
   16 newlines: newlines . NEWLINE

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 2 (groups)


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 blocks: BLOCKS . newlines
   15 newlines: . NEWLINE
   16         | . newlines NEWLINE

    NEWLINE  shift, and go to state 4

    newlines  go to state 12


State 8

    6 group: IDENTIFIER . "=" symbols

    "="  shift, and go to state 13


State 9

    1 program: groups blocks . statement
    5 blocks: blocks . block newlines
    7 block: . IDENTIFIER ":" scope
   17 statement: . write travel transition
   18          | . IF condition scope newlines else
   19          | . ACCEPT
   20          | . REJECTION
   24 write: . %empty  [GO]
   25      | . MARK ","
   26      | . UNMARK ","
   27      | . WRITE string reversal repetition ","

    IF          shift, and go to state 14
    ACCEPT      shift, and go to state 15
    REJECTION   shift, and go to state 16
    WRITE       shift, and go to state 17
    MARK        shift, and go to state 18
    UNMARK      shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    $default  reduce using rule 24 (write)

    block      go to state 21
    statement  go to state 22
    write      go to state 23


State 10

    3 groups: groups group . newlines
   15 newlines: . NEWLINE
   16         | . newlines NEWLINE

    NEWLINE  shift, and go to state 4

    newlines  go to state 24


State 11

   16 newlines: newlines NEWLINE .

    $default  reduce using rule 16 (newlines)


State 12

    4 blocks: BLOCKS newlines .  [IF, ACCEPT, REJECTION, WRITE, GO, MARK, UNMARK, IDENTIFIER]
   16 newlines: newlines . NEWLINE

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 4 (blocks)


State 13

    6 group: IDENTIFIER "=" . symbols
    8 symbols: . symbols "," symbol
    9        | . symbol
   10 symbol: . SYMBOL
   11       | . MARKED SYMBOL

    MARKED  shift, and go to state 25
    SYMBOL  shift, and go to state 26

    symbols  go to state 27
    symbol   go to state 28


State 14

   10 symbol: . SYMBOL
   11       | . MARKED SYMBOL
   18 statement: IF . condition scope newlines else
   41 condition: . symbol
   42          | . MARKED
   43          | . UNMARKED
   44          | . condition OR symbol
   45          | . condition OR IDENTIFIER
   46          | . IDENTIFIER

    MARKED      shift, and go to state 29
    UNMARKED    shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    SYMBOL      shift, and go to state 26

    symbol     go to state 32
    condition  go to state 33


State 15

   19 statement: ACCEPT .

    $default  reduce using rule 19 (statement)


State 16

   20 statement: REJECTION .

    $default  reduce using rule 20 (statement)


State 17

   27 write: WRITE . string reversal repetition ","
   33 string: . string SYMBOL
   34       | . SYMBOL

    SYMBOL  shift, and go to state 34

    string  go to state 35


State 18

   25 write: MARK . ","

    ","  shift, and go to state 36


State 19

   26 write: UNMARK . ","

    ","  shift, and go to state 37


State 20

    7 block: IDENTIFIER . ":" scope

    ":"  shift, and go to state 38


State 21

    5 blocks: blocks block . newlines
   15 newlines: . NEWLINE
   16         | . newlines NEWLINE

    NEWLINE  shift, and go to state 4

    newlines  go to state 39


State 22

    1 program: groups blocks statement .

    $default  reduce using rule 1 (program)


State 23

   17 statement: write . travel transition
   28 travel: . GO direction repetition until

    GO  shift, and go to state 40

    travel  go to state 41


State 24

    3 groups: groups group newlines .  [BLOCKS, IDENTIFIER]
   16 newlines: newlines . NEWLINE

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 3 (groups)


State 25

   11 symbol: MARKED . SYMBOL

    SYMBOL  shift, and go to state 42


State 26

   10 symbol: SYMBOL .

    $default  reduce using rule 10 (symbol)


State 27

    6 group: IDENTIFIER "=" symbols .  [NEWLINE]
    8 symbols: symbols . "," symbol

    ","  shift, and go to state 43

    $default  reduce using rule 6 (group)


State 28

    9 symbols: symbol .

    $default  reduce using rule 9 (symbols)


State 29

   11 symbol: MARKED . SYMBOL
   42 condition: MARKED .  [INDENT, NEWLINE, OR, ","]

    SYMBOL  shift, and go to state 42

    $default  reduce using rule 42 (condition)


State 30

   43 condition: UNMARKED .

    $default  reduce using rule 43 (condition)


State 31

   46 condition: IDENTIFIER .

    $default  reduce using rule 46 (condition)


State 32

   41 condition: symbol .

    $default  reduce using rule 41 (condition)


State 33

   12 scope: . INDENT newlines statement optional_newlines UNINDENT
   18 statement: IF condition . scope newlines else
   44 condition: condition . OR symbol
   45          | condition . OR IDENTIFIER

    INDENT  shift, and go to state 44
    OR      shift, and go to state 45

    scope  go to state 46


State 34

   34 string: SYMBOL .

    $default  reduce using rule 34 (string)


State 35

   27 write: WRITE string . reversal repetition ","
   33 string: string . SYMBOL
   35 reversal: . %empty  [NUMBER, ","]
   36         | . BACKWARDS

    BACKWARDS  shift, and go to state 47
    SYMBOL     shift, and go to state 48

    $default  reduce using rule 35 (reversal)

    reversal  go to state 49


State 36

   25 write: MARK "," .

    $default  reduce using rule 25 (write)


State 37

   26 write: UNMARK "," .

    $default  reduce using rule 26 (write)


State 38

    7 block: IDENTIFIER ":" . scope
   12 scope: . INDENT newlines statement optional_newlines UNINDENT

    INDENT  shift, and go to state 44

    scope  go to state 50


State 39

    5 blocks: blocks block newlines .  [IF, ACCEPT, REJECTION, WRITE, GO, MARK, UNMARK, IDENTIFIER]
   16 newlines: newlines . NEWLINE

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 5 (blocks)


State 40

   28 travel: GO . direction repetition until
   31 direction: . LEFT
   32          | . RIGHT

    LEFT   shift, and go to state 51
    RIGHT  shift, and go to state 52

    direction  go to state 53


State 41

   15 newlines: . NEWLINE
   16         | . newlines NEWLINE
   17 statement: write travel . transition
   29 transition: . newlines statement
   30           | . "," DO IDENTIFIER

    NEWLINE  shift, and go to state 4
    ","      shift, and go to state 54

    newlines    go to state 55
    transition  go to state 56


State 42

   11 symbol: MARKED SYMBOL .

    $default  reduce using rule 11 (symbol)


State 43

    8 symbols: symbols "," . symbol
   10 symbol: . SYMBOL
   11       | . MARKED SYMBOL

    MARKED  shift, and go to state 25
    SYMBOL  shift, and go to state 26

    symbol  go to state 57


State 44

   12 scope: INDENT . newlines statement optional_newlines UNINDENT
   15 newlines: . NEWLINE
   16         | . newlines NEWLINE

    NEWLINE  shift, and go to state 4

    newlines  go to state 58


State 45

   10 symbol: . SYMBOL
   11       | . MARKED SYMBOL
   44 condition: condition OR . symbol
   45          | condition OR . IDENTIFIER

    MARKED      shift, and go to state 25
    IDENTIFIER  shift, and go to state 59
    SYMBOL      shift, and go to state 26

    symbol  go to state 60


State 46

   15 newlines: . NEWLINE
   16         | . newlines NEWLINE
   18 statement: IF condition scope . newlines else

    NEWLINE  shift, and go to state 4

    newlines  go to state 61


State 47

   36 reversal: BACKWARDS .

    $default  reduce using rule 36 (reversal)


State 48

   33 string: string SYMBOL .

    $default  reduce using rule 33 (string)


State 49

   27 write: WRITE string reversal . repetition ","
   37 repetition: . %empty  [","]
   38           | . NUMBER TIMES

    NUMBER  shift, and go to state 62

    $default  reduce using rule 37 (repetition)

    repetition  go to state 63


State 50

    7 block: IDENTIFIER ":" scope .

    $default  reduce using rule 7 (block)


State 51

   31 direction: LEFT .

    $default  reduce using rule 31 (direction)


State 52

   32 direction: RIGHT .

    $default  reduce using rule 32 (direction)


State 53

   28 travel: GO direction . repetition until
   37 repetition: . %empty  [NEWLINE, UNTIL, ","]
   38           | . NUMBER TIMES

    NUMBER  shift, and go to state 62

    $default  reduce using rule 37 (repetition)

    repetition  go to state 64


State 54

   30 transition: "," . DO IDENTIFIER

    DO  shift, and go to state 65


State 55

   16 newlines: newlines . NEWLINE
   17 statement: . write travel transition
   18          | . IF condition scope newlines else
   19          | . ACCEPT
   20          | . REJECTION
   24 write: . %empty  [GO]
   25      | . MARK ","
   26      | . UNMARK ","
   27      | . WRITE string reversal repetition ","
   29 transition: newlines . statement

    NEWLINE    shift, and go to state 11
    IF         shift, and go to state 14
    ACCEPT     shift, and go to state 15
    REJECTION  shift, and go to state 16
    WRITE      shift, and go to state 17
    MARK       shift, and go to state 18
    UNMARK     shift, and go to state 19

    $default  reduce using rule 24 (write)

    statement  go to state 66
    write      go to state 23


State 56

   17 statement: write travel transition .

    $default  reduce using rule 17 (statement)


State 57

    8 symbols: symbols "," symbol .

    $default  reduce using rule 8 (symbols)


State 58

   12 scope: INDENT newlines . statement optional_newlines UNINDENT
   16 newlines: newlines . NEWLINE
   17 statement: . write travel transition
   18          | . IF condition scope newlines else
   19          | . ACCEPT
   20          | . REJECTION
   24 write: . %empty  [GO]
   25      | . MARK ","
   26      | . UNMARK ","
   27      | . WRITE string reversal repetition ","

    NEWLINE    shift, and go to state 11
    IF         shift, and go to state 14
    ACCEPT     shift, and go to state 15
    REJECTION  shift, and go to state 16
    WRITE      shift, and go to state 17
    MARK       shift, and go to state 18
    UNMARK     shift, and go to state 19

    $default  reduce using rule 24 (write)

    statement  go to state 67
    write      go to state 23


State 59

   45 condition: condition OR IDENTIFIER .

    $default  reduce using rule 45 (condition)


State 60

   44 condition: condition OR symbol .

    $default  reduce using rule 44 (condition)


State 61

   16 newlines: newlines . NEWLINE
   17 statement: . write travel transition
   18          | . IF condition scope newlines else
   18          | IF condition scope newlines . else
   19          | . ACCEPT
   20          | . REJECTION
   21 else: . OR condition scope else
   22     | . ELSE scope
   23     | . statement
   24 write: . %empty  [GO]
   25      | . MARK ","
   26      | . UNMARK ","
   27      | . WRITE string reversal repetition ","

    NEWLINE    shift, and go to state 11
    IF         shift, and go to state 14
    OR         shift, and go to state 68
    ELSE       shift, and go to state 69
    ACCEPT     shift, and go to state 15
    REJECTION  shift, and go to state 16
    WRITE      shift, and go to state 17
    MARK       shift, and go to state 18
    UNMARK     shift, and go to state 19

    $default  reduce using rule 24 (write)

    statement  go to state 70
    else       go to state 71
    write      go to state 23


State 62

   38 repetition: NUMBER . TIMES

    TIMES  shift, and go to state 72


State 63

   27 write: WRITE string reversal repetition . ","

    ","  shift, and go to state 73


State 64

   28 travel: GO direction repetition . until
   39 until: . %empty  [NEWLINE, ","]
   40      | . UNTIL condition

    UNTIL  shift, and go to state 74

    $default  reduce using rule 39 (until)

    until  go to state 75


State 65

   30 transition: "," DO . IDENTIFIER

    IDENTIFIER  shift, and go to state 76


State 66

   29 transition: newlines statement .

    $default  reduce using rule 29 (transition)


State 67

   12 scope: INDENT newlines statement . optional_newlines UNINDENT
   13 optional_newlines: . %empty  [UNINDENT]
   14                  | . newlines
   15 newlines: . NEWLINE
   16         | . newlines NEWLINE

    NEWLINE  shift, and go to state 4

    $default  reduce using rule 13 (optional_newlines)

    optional_newlines  go to state 77
    newlines           go to state 78


State 68

   10 symbol: . SYMBOL
   11       | . MARKED SYMBOL
   21 else: OR . condition scope else
   41 condition: . symbol
   42          | . MARKED
   43          | . UNMARKED
   44          | . condition OR symbol
   45          | . condition OR IDENTIFIER
   46          | . IDENTIFIER

    MARKED      shift, and go to state 29
    UNMARKED    shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    SYMBOL      shift, and go to state 26

    symbol     go to state 32
    condition  go to state 79


State 69

   12 scope: . INDENT newlines statement optional_newlines UNINDENT
   22 else: ELSE . scope

    INDENT  shift, and go to state 44

    scope  go to state 80


State 70

   23 else: statement .

    $default  reduce using rule 23 (else)


State 71

   18 statement: IF condition scope newlines else .

    $default  reduce using rule 18 (statement)


State 72

   38 repetition: NUMBER TIMES .

    $default  reduce using rule 38 (repetition)


State 73

   27 write: WRITE string reversal repetition "," .

    $default  reduce using rule 27 (write)


State 74

   10 symbol: . SYMBOL
   11       | . MARKED SYMBOL
   40 until: UNTIL . condition
   41 condition: . symbol
   42          | . MARKED
   43          | . UNMARKED
   44          | . condition OR symbol
   45          | . condition OR IDENTIFIER
   46          | . IDENTIFIER

    MARKED      shift, and go to state 29
    UNMARKED    shift, and go to state 30
    IDENTIFIER  shift, and go to state 31
    SYMBOL      shift, and go to state 26

    symbol     go to state 32
    condition  go to state 81


State 75

   28 travel: GO direction repetition until .

    $default  reduce using rule 28 (travel)


State 76

   30 transition: "," DO IDENTIFIER .

    $default  reduce using rule 30 (transition)


State 77

   12 scope: INDENT newlines statement optional_newlines . UNINDENT

    UNINDENT  shift, and go to state 82


State 78

   14 optional_newlines: newlines .  [UNINDENT]
   16 newlines: newlines . NEWLINE

    NEWLINE  shift, and go to state 11

    $default  reduce using rule 14 (optional_newlines)


State 79

   12 scope: . INDENT newlines statement optional_newlines UNINDENT
   21 else: OR condition . scope else
   44 condition: condition . OR symbol
   45          | condition . OR IDENTIFIER

    INDENT  shift, and go to state 44
    OR      shift, and go to state 45

    scope  go to state 83


State 80

   22 else: ELSE scope .

    $default  reduce using rule 22 (else)


State 81

   40 until: UNTIL condition .  [NEWLINE, ","]
   44 condition: condition . OR symbol
   45          | condition . OR IDENTIFIER

    OR  shift, and go to state 45

    $default  reduce using rule 40 (until)


State 82

   12 scope: INDENT newlines statement optional_newlines UNINDENT .

    $default  reduce using rule 12 (scope)


State 83

   17 statement: . write travel transition
   18          | . IF condition scope newlines else
   19          | . ACCEPT
   20          | . REJECTION
   21 else: . OR condition scope else
   21     | OR condition scope . else
   22     | . ELSE scope
   23     | . statement
   24 write: . %empty  [GO]
   25      | . MARK ","
   26      | . UNMARK ","
   27      | . WRITE string reversal repetition ","

    IF         shift, and go to state 14
    OR         shift, and go to state 68
    ELSE       shift, and go to state 69
    ACCEPT     shift, and go to state 15
    REJECTION  shift, and go to state 16
    WRITE      shift, and go to state 17
    MARK       shift, and go to state 18
    UNMARK     shift, and go to state 19

    $default  reduce using rule 24 (write)

    statement  go to state 70
    else       go to state 84
    write      go to state 23


State 84

   21 else: OR condition scope else .

    $default  reduce using rule 21 (else)
