Terminals unused in grammar

   GROUPS
   BLOCKS
   END


Grammar

    0 $accept: program $end

    1 program: optional_newlines optional_groups statement optional_newlines optional_blocks

    2 optional_groups: %empty
    3                | groups

    4 groups: group newlines
    5       | groups group newlines

    6 group: IDENTIFIER "=" symbols

    7 optional_blocks: %empty
    8                | blocks

    9 blocks: block newlines
   10       | blocks block newlines

   11 block: IDENTIFIER ":" scope

   12 symbols: symbols "," symbol
   13        | symbol

   14 symbol: SYMBOL
   15       | MARKED SYMBOL

   16 scope: INDENT newlines statement optional_newlines DEDENT

   17 newlines: NEWLINE optional_newlines

   18 optional_newlines: %empty
   19                  | optional_newlines NEWLINE

   20 statement: write travel transition
   21          | IF condition scope newlines else
   22          | ACCEPT
   23          | REJECTION

   24 else: OR condition scope else
   25     | ELSE scope
   26     | statement

   27 write: %empty
   28      | MARK ","
   29      | UNMARK ","
   30      | WRITE string reversal repetition ","

   31 travel: GO direction repetition until

   32 transition: newlines statement
   33           | "," DO IDENTIFIER

   34 direction: LEFT
   35          | RIGHT

   36 string: string SYMBOL
   37       | SYMBOL

   38 reversal: %empty
   39         | BACKWARDS

   40 repetition: %empty
   41           | NUMBER TIMES

   42 until: %empty
   43      | UNTIL condition

   44 condition: symbol
   45          | MARKED
   46          | UNMARKED
   47          | condition OR symbol
   48          | condition OR IDENTIFIER
   49          | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
INDENT (258) 16
DEDENT (259) 16
NEWLINE (260) 17 19
IF (261) 21
OR (262) 24 47 48
ELSE (263) 25
ACCEPT (264) 22
REJECTION (265) 23
WRITE (266) 30
GO (267) 31
DO (268) 33
MARK (269) 28
UNMARK (270) 29
MARKED (271) 15 45
UNMARKED (272) 46
LEFT (273) 34
RIGHT (274) 35
UNTIL (275) 43
TIMES (276) 41
BACKWARDS (277) 39
GROUPS (278)
BLOCKS (279)
END (280)
IDENTIFIER (281) 6 11 33 48 49
SYMBOL (282) 14 15 36 37
NUMBER (283) 41
"=" (284) 6
"," (285) 12 28 29 30 33
":" (286) 11


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
optional_groups (34)
    on left: 2 3, on right: 1
groups (35)
    on left: 4 5, on right: 3 5
group (36)
    on left: 6, on right: 4 5
optional_blocks (37)
    on left: 7 8, on right: 1
blocks (38)
    on left: 9 10, on right: 8 10
block (39)
    on left: 11, on right: 9 10
symbols (40)
    on left: 12 13, on right: 6 12
symbol (41)
    on left: 14 15, on right: 12 13 44 47
scope (42)
    on left: 16, on right: 11 21 24 25
newlines (43)
    on left: 17, on right: 4 5 9 10 16 21 32
optional_newlines (44)
    on left: 18 19, on right: 1 16 17 19
statement (45)
    on left: 20 21 22 23, on right: 1 16 26 32
else (46)
    on left: 24 25 26, on right: 21 24
write (47)
    on left: 27 28 29 30, on right: 20
travel (48)
    on left: 31, on right: 20
transition (49)
    on left: 32 33, on right: 20
direction (50)
    on left: 34 35, on right: 31
string (51)
    on left: 36 37, on right: 30 36
reversal (52)
    on left: 38 39, on right: 30
repetition (53)
    on left: 40 41, on right: 30 31
until (54)
    on left: 42 43, on right: 31
condition (55)
    on left: 44 45 46 47 48 49, on right: 21 24 43 47 48


State 0

    0 $accept: . program $end
    1 program: . optional_newlines optional_groups statement optional_newlines optional_blocks
   18 optional_newlines: . %empty
   19                  | . optional_newlines NEWLINE

    $default  reduce using rule 18 (optional_newlines)

    program            go to state 1
    optional_newlines  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: optional_newlines . optional_groups statement optional_newlines optional_blocks
    2 optional_groups: . %empty  [IF, ACCEPT, REJECTION, WRITE, GO, MARK, UNMARK]
    3                | . groups
    4 groups: . group newlines
    5       | . groups group newlines
    6 group: . IDENTIFIER "=" symbols
   19 optional_newlines: optional_newlines . NEWLINE

    NEWLINE     shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 2 (optional_groups)

    optional_groups  go to state 6
    groups           go to state 7
    group            go to state 8


State 3

    0 $accept: program $end .

    $default  accept


State 4

   19 optional_newlines: optional_newlines NEWLINE .

    $default  reduce using rule 19 (optional_newlines)


State 5

    6 group: IDENTIFIER . "=" symbols

    "="  shift, and go to state 9


State 6

    1 program: optional_newlines optional_groups . statement optional_newlines optional_blocks
   20 statement: . write travel transition
   21          | . IF condition scope newlines else
   22          | . ACCEPT
   23          | . REJECTION
   27 write: . %empty  [GO]
   28      | . MARK ","
   29      | . UNMARK ","
   30      | . WRITE string reversal repetition ","

    IF         shift, and go to state 10
    ACCEPT     shift, and go to state 11
    REJECTION  shift, and go to state 12
    WRITE      shift, and go to state 13
    MARK       shift, and go to state 14
    UNMARK     shift, and go to state 15

    $default  reduce using rule 27 (write)

    statement  go to state 16
    write      go to state 17


State 7

    3 optional_groups: groups .  [IF, ACCEPT, REJECTION, WRITE, GO, MARK, UNMARK]
    5 groups: groups . group newlines
    6 group: . IDENTIFIER "=" symbols

    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 3 (optional_groups)

    group  go to state 18


State 8

    4 groups: group . newlines
   17 newlines: . NEWLINE optional_newlines

    NEWLINE  shift, and go to state 19

    newlines  go to state 20


State 9

    6 group: IDENTIFIER "=" . symbols
   12 symbols: . symbols "," symbol
   13        | . symbol
   14 symbol: . SYMBOL
   15       | . MARKED SYMBOL

    MARKED  shift, and go to state 21
    SYMBOL  shift, and go to state 22

    symbols  go to state 23
    symbol   go to state 24


State 10

   14 symbol: . SYMBOL
   15       | . MARKED SYMBOL
   21 statement: IF . condition scope newlines else
   44 condition: . symbol
   45          | . MARKED
   46          | . UNMARKED
   47          | . condition OR symbol
   48          | . condition OR IDENTIFIER
   49          | . IDENTIFIER

    MARKED      shift, and go to state 25
    UNMARKED    shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    SYMBOL      shift, and go to state 22

    symbol     go to state 28
    condition  go to state 29


State 11

   22 statement: ACCEPT .

    $default  reduce using rule 22 (statement)


State 12

   23 statement: REJECTION .

    $default  reduce using rule 23 (statement)


State 13

   30 write: WRITE . string reversal repetition ","
   36 string: . string SYMBOL
   37       | . SYMBOL

    SYMBOL  shift, and go to state 30

    string  go to state 31


State 14

   28 write: MARK . ","

    ","  shift, and go to state 32


State 15

   29 write: UNMARK . ","

    ","  shift, and go to state 33


State 16

    1 program: optional_newlines optional_groups statement . optional_newlines optional_blocks
   18 optional_newlines: . %empty
   19                  | . optional_newlines NEWLINE

    $default  reduce using rule 18 (optional_newlines)

    optional_newlines  go to state 34


State 17

   20 statement: write . travel transition
   31 travel: . GO direction repetition until

    GO  shift, and go to state 35

    travel  go to state 36


State 18

    5 groups: groups group . newlines
   17 newlines: . NEWLINE optional_newlines

    NEWLINE  shift, and go to state 19

    newlines  go to state 37


State 19

   17 newlines: NEWLINE . optional_newlines
   18 optional_newlines: . %empty
   19                  | . optional_newlines NEWLINE

    $default  reduce using rule 18 (optional_newlines)

    optional_newlines  go to state 38


State 20

    4 groups: group newlines .

    $default  reduce using rule 4 (groups)


State 21

   15 symbol: MARKED . SYMBOL

    SYMBOL  shift, and go to state 39


State 22

   14 symbol: SYMBOL .

    $default  reduce using rule 14 (symbol)


State 23

    6 group: IDENTIFIER "=" symbols .  [NEWLINE]
   12 symbols: symbols . "," symbol

    ","  shift, and go to state 40

    $default  reduce using rule 6 (group)


State 24

   13 symbols: symbol .

    $default  reduce using rule 13 (symbols)


State 25

   15 symbol: MARKED . SYMBOL
   45 condition: MARKED .  [INDENT, NEWLINE, OR, ","]

    SYMBOL  shift, and go to state 39

    $default  reduce using rule 45 (condition)


State 26

   46 condition: UNMARKED .

    $default  reduce using rule 46 (condition)


State 27

   49 condition: IDENTIFIER .

    $default  reduce using rule 49 (condition)


State 28

   44 condition: symbol .

    $default  reduce using rule 44 (condition)


State 29

   16 scope: . INDENT newlines statement optional_newlines DEDENT
   21 statement: IF condition . scope newlines else
   47 condition: condition . OR symbol
   48          | condition . OR IDENTIFIER

    INDENT  shift, and go to state 41
    OR      shift, and go to state 42

    scope  go to state 43


State 30

   37 string: SYMBOL .

    $default  reduce using rule 37 (string)


State 31

   30 write: WRITE string . reversal repetition ","
   36 string: string . SYMBOL
   38 reversal: . %empty  [NUMBER, ","]
   39         | . BACKWARDS

    BACKWARDS  shift, and go to state 44
    SYMBOL     shift, and go to state 45

    $default  reduce using rule 38 (reversal)

    reversal  go to state 46


State 32

   28 write: MARK "," .

    $default  reduce using rule 28 (write)


State 33

   29 write: UNMARK "," .

    $default  reduce using rule 29 (write)


State 34

    1 program: optional_newlines optional_groups statement optional_newlines . optional_blocks
    7 optional_blocks: . %empty  [$end]
    8                | . blocks
    9 blocks: . block newlines
   10       | . blocks block newlines
   11 block: . IDENTIFIER ":" scope
   19 optional_newlines: optional_newlines . NEWLINE

    NEWLINE     shift, and go to state 4
    IDENTIFIER  shift, and go to state 47

    $default  reduce using rule 7 (optional_blocks)

    optional_blocks  go to state 48
    blocks           go to state 49
    block            go to state 50


State 35

   31 travel: GO . direction repetition until
   34 direction: . LEFT
   35          | . RIGHT

    LEFT   shift, and go to state 51
    RIGHT  shift, and go to state 52

    direction  go to state 53


State 36

   17 newlines: . NEWLINE optional_newlines
   20 statement: write travel . transition
   32 transition: . newlines statement
   33           | . "," DO IDENTIFIER

    NEWLINE  shift, and go to state 19
    ","      shift, and go to state 54

    newlines    go to state 55
    transition  go to state 56


State 37

    5 groups: groups group newlines .

    $default  reduce using rule 5 (groups)


State 38

   17 newlines: NEWLINE optional_newlines .  [$end, IF, OR, ELSE, ACCEPT, REJECTION, WRITE, GO, MARK, UNMARK, IDENTIFIER]
   19 optional_newlines: optional_newlines . NEWLINE

    NEWLINE  shift, and go to state 4

    $default  reduce using rule 17 (newlines)


State 39

   15 symbol: MARKED SYMBOL .

    $default  reduce using rule 15 (symbol)


State 40

   12 symbols: symbols "," . symbol
   14 symbol: . SYMBOL
   15       | . MARKED SYMBOL

    MARKED  shift, and go to state 21
    SYMBOL  shift, and go to state 22

    symbol  go to state 57


State 41

   16 scope: INDENT . newlines statement optional_newlines DEDENT
   17 newlines: . NEWLINE optional_newlines

    NEWLINE  shift, and go to state 19

    newlines  go to state 58


State 42

   14 symbol: . SYMBOL
   15       | . MARKED SYMBOL
   47 condition: condition OR . symbol
   48          | condition OR . IDENTIFIER

    MARKED      shift, and go to state 21
    IDENTIFIER  shift, and go to state 59
    SYMBOL      shift, and go to state 22

    symbol  go to state 60


State 43

   17 newlines: . NEWLINE optional_newlines
   21 statement: IF condition scope . newlines else

    NEWLINE  shift, and go to state 19

    newlines  go to state 61


State 44

   39 reversal: BACKWARDS .

    $default  reduce using rule 39 (reversal)


State 45

   36 string: string SYMBOL .

    $default  reduce using rule 36 (string)


State 46

   30 write: WRITE string reversal . repetition ","
   40 repetition: . %empty  [","]
   41           | . NUMBER TIMES

    NUMBER  shift, and go to state 62

    $default  reduce using rule 40 (repetition)

    repetition  go to state 63


State 47

   11 block: IDENTIFIER . ":" scope

    ":"  shift, and go to state 64


State 48

    1 program: optional_newlines optional_groups statement optional_newlines optional_blocks .

    $default  reduce using rule 1 (program)


State 49

    8 optional_blocks: blocks .  [$end]
   10 blocks: blocks . block newlines
   11 block: . IDENTIFIER ":" scope

    IDENTIFIER  shift, and go to state 47

    $default  reduce using rule 8 (optional_blocks)

    block  go to state 65


State 50

    9 blocks: block . newlines
   17 newlines: . NEWLINE optional_newlines

    NEWLINE  shift, and go to state 19

    newlines  go to state 66


State 51

   34 direction: LEFT .

    $default  reduce using rule 34 (direction)


State 52

   35 direction: RIGHT .

    $default  reduce using rule 35 (direction)


State 53

   31 travel: GO direction . repetition until
   40 repetition: . %empty  [NEWLINE, UNTIL, ","]
   41           | . NUMBER TIMES

    NUMBER  shift, and go to state 62

    $default  reduce using rule 40 (repetition)

    repetition  go to state 67


State 54

   33 transition: "," . DO IDENTIFIER

    DO  shift, and go to state 68


State 55

   20 statement: . write travel transition
   21          | . IF condition scope newlines else
   22          | . ACCEPT
   23          | . REJECTION
   27 write: . %empty  [GO]
   28      | . MARK ","
   29      | . UNMARK ","
   30      | . WRITE string reversal repetition ","
   32 transition: newlines . statement

    IF         shift, and go to state 10
    ACCEPT     shift, and go to state 11
    REJECTION  shift, and go to state 12
    WRITE      shift, and go to state 13
    MARK       shift, and go to state 14
    UNMARK     shift, and go to state 15

    $default  reduce using rule 27 (write)

    statement  go to state 69
    write      go to state 17


State 56

   20 statement: write travel transition .

    $default  reduce using rule 20 (statement)


State 57

   12 symbols: symbols "," symbol .

    $default  reduce using rule 12 (symbols)


State 58

   16 scope: INDENT newlines . statement optional_newlines DEDENT
   20 statement: . write travel transition
   21          | . IF condition scope newlines else
   22          | . ACCEPT
   23          | . REJECTION
   27 write: . %empty  [GO]
   28      | . MARK ","
   29      | . UNMARK ","
   30      | . WRITE string reversal repetition ","

    IF         shift, and go to state 10
    ACCEPT     shift, and go to state 11
    REJECTION  shift, and go to state 12
    WRITE      shift, and go to state 13
    MARK       shift, and go to state 14
    UNMARK     shift, and go to state 15

    $default  reduce using rule 27 (write)

    statement  go to state 70
    write      go to state 17


State 59

   48 condition: condition OR IDENTIFIER .

    $default  reduce using rule 48 (condition)


State 60

   47 condition: condition OR symbol .

    $default  reduce using rule 47 (condition)


State 61

   20 statement: . write travel transition
   21          | . IF condition scope newlines else
   21          | IF condition scope newlines . else
   22          | . ACCEPT
   23          | . REJECTION
   24 else: . OR condition scope else
   25     | . ELSE scope
   26     | . statement
   27 write: . %empty  [GO]
   28      | . MARK ","
   29      | . UNMARK ","
   30      | . WRITE string reversal repetition ","

    IF         shift, and go to state 10
    OR         shift, and go to state 71
    ELSE       shift, and go to state 72
    ACCEPT     shift, and go to state 11
    REJECTION  shift, and go to state 12
    WRITE      shift, and go to state 13
    MARK       shift, and go to state 14
    UNMARK     shift, and go to state 15

    $default  reduce using rule 27 (write)

    statement  go to state 73
    else       go to state 74
    write      go to state 17


State 62

   41 repetition: NUMBER . TIMES

    TIMES  shift, and go to state 75


State 63

   30 write: WRITE string reversal repetition . ","

    ","  shift, and go to state 76


State 64

   11 block: IDENTIFIER ":" . scope
   16 scope: . INDENT newlines statement optional_newlines DEDENT

    INDENT  shift, and go to state 41

    scope  go to state 77


State 65

   10 blocks: blocks block . newlines
   17 newlines: . NEWLINE optional_newlines

    NEWLINE  shift, and go to state 19

    newlines  go to state 78


State 66

    9 blocks: block newlines .

    $default  reduce using rule 9 (blocks)


State 67

   31 travel: GO direction repetition . until
   42 until: . %empty  [NEWLINE, ","]
   43      | . UNTIL condition

    UNTIL  shift, and go to state 79

    $default  reduce using rule 42 (until)

    until  go to state 80


State 68

   33 transition: "," DO . IDENTIFIER

    IDENTIFIER  shift, and go to state 81


State 69

   32 transition: newlines statement .

    $default  reduce using rule 32 (transition)


State 70

   16 scope: INDENT newlines statement . optional_newlines DEDENT
   18 optional_newlines: . %empty
   19                  | . optional_newlines NEWLINE

    $default  reduce using rule 18 (optional_newlines)

    optional_newlines  go to state 82


State 71

   14 symbol: . SYMBOL
   15       | . MARKED SYMBOL
   24 else: OR . condition scope else
   44 condition: . symbol
   45          | . MARKED
   46          | . UNMARKED
   47          | . condition OR symbol
   48          | . condition OR IDENTIFIER
   49          | . IDENTIFIER

    MARKED      shift, and go to state 25
    UNMARKED    shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    SYMBOL      shift, and go to state 22

    symbol     go to state 28
    condition  go to state 83


State 72

   16 scope: . INDENT newlines statement optional_newlines DEDENT
   25 else: ELSE . scope

    INDENT  shift, and go to state 41

    scope  go to state 84


State 73

   26 else: statement .

    $default  reduce using rule 26 (else)


State 74

   21 statement: IF condition scope newlines else .

    $default  reduce using rule 21 (statement)


State 75

   41 repetition: NUMBER TIMES .

    $default  reduce using rule 41 (repetition)


State 76

   30 write: WRITE string reversal repetition "," .

    $default  reduce using rule 30 (write)


State 77

   11 block: IDENTIFIER ":" scope .

    $default  reduce using rule 11 (block)


State 78

   10 blocks: blocks block newlines .

    $default  reduce using rule 10 (blocks)


State 79

   14 symbol: . SYMBOL
   15       | . MARKED SYMBOL
   43 until: UNTIL . condition
   44 condition: . symbol
   45          | . MARKED
   46          | . UNMARKED
   47          | . condition OR symbol
   48          | . condition OR IDENTIFIER
   49          | . IDENTIFIER

    MARKED      shift, and go to state 25
    UNMARKED    shift, and go to state 26
    IDENTIFIER  shift, and go to state 27
    SYMBOL      shift, and go to state 22

    symbol     go to state 28
    condition  go to state 85


State 80

   31 travel: GO direction repetition until .

    $default  reduce using rule 31 (travel)


State 81

   33 transition: "," DO IDENTIFIER .

    $default  reduce using rule 33 (transition)


State 82

   16 scope: INDENT newlines statement optional_newlines . DEDENT
   19 optional_newlines: optional_newlines . NEWLINE

    DEDENT   shift, and go to state 86
    NEWLINE  shift, and go to state 4


State 83

   16 scope: . INDENT newlines statement optional_newlines DEDENT
   24 else: OR condition . scope else
   47 condition: condition . OR symbol
   48          | condition . OR IDENTIFIER

    INDENT  shift, and go to state 41
    OR      shift, and go to state 42

    scope  go to state 87


State 84

   25 else: ELSE scope .

    $default  reduce using rule 25 (else)


State 85

   43 until: UNTIL condition .  [NEWLINE, ","]
   47 condition: condition . OR symbol
   48          | condition . OR IDENTIFIER

    OR  shift, and go to state 42

    $default  reduce using rule 43 (until)


State 86

   16 scope: INDENT newlines statement optional_newlines DEDENT .

    $default  reduce using rule 16 (scope)


State 87

   20 statement: . write travel transition
   21          | . IF condition scope newlines else
   22          | . ACCEPT
   23          | . REJECTION
   24 else: . OR condition scope else
   24     | OR condition scope . else
   25     | . ELSE scope
   26     | . statement
   27 write: . %empty  [GO]
   28      | . MARK ","
   29      | . UNMARK ","
   30      | . WRITE string reversal repetition ","

    IF         shift, and go to state 10
    OR         shift, and go to state 71
    ELSE       shift, and go to state 72
    ACCEPT     shift, and go to state 11
    REJECTION  shift, and go to state 12
    WRITE      shift, and go to state 13
    MARK       shift, and go to state 14
    UNMARK     shift, and go to state 15

    $default  reduce using rule 27 (write)

    statement  go to state 73
    else       go to state 88
    write      go to state 17


State 88

   24 else: OR condition scope else .

    $default  reduce using rule 24 (else)
